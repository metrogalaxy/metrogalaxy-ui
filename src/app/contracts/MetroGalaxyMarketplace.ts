/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type AssetStruct = { priceInWei: BigNumberish; amount: BigNumberish };

export type AssetStructOutput = [BigNumber, BigNumber] & {
  priceInWei: BigNumber;
  amount: BigNumber;
};

export interface MetroGalaxyMarketplaceInterface extends utils.Interface {
  functions: {
    "MAX_MARKET_FEE()": FunctionFragment;
    "acceptedAssets(address)": FunctionFragment;
    "acceptedToken()": FunctionFragment;
    "addOperator(address)": FunctionFragment;
    "buy(address,uint256,address,uint256,uint256)": FunctionFragment;
    "cancelOffer(address,uint256)": FunctionFragment;
    "delist(address,uint256)": FunctionFragment;
    "getListedAsset(address,uint256,address)": FunctionFragment;
    "getOfferedAsset(address,uint256,address)": FunctionFragment;
    "getOperators()": FunctionFragment;
    "isAcceptedAsset(address)": FunctionFragment;
    "isOperator(address)": FunctionFragment;
    "list(address,uint256,uint256,uint256)": FunctionFragment;
    "listedAssets(bytes32,address)": FunctionFragment;
    "marketFeeInBps()": FunctionFragment;
    "offer(address,uint256,uint256,uint256)": FunctionFragment;
    "offeredAssets(bytes32,address)": FunctionFragment;
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": FunctionFragment;
    "onERC1155Received(address,address,uint256,uint256,bytes)": FunctionFragment;
    "onERC721Received(address,address,uint256,bytes)": FunctionFragment;
    "owner()": FunctionFragment;
    "pause()": FunctionFragment;
    "paused()": FunctionFragment;
    "removeOperator(address)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "takeOffer(address,uint256,uint256,uint256,address)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "unpause()": FunctionFragment;
    "updateAcceptedAsset(address,bool)": FunctionFragment;
    "updateMarketFeeBps(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "MAX_MARKET_FEE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "acceptedAssets",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "acceptedToken",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "addOperator", values: [string]): string;
  encodeFunctionData(
    functionFragment: "buy",
    values: [string, BigNumberish, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelOffer",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "delist",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getListedAsset",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getOfferedAsset",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getOperators",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isAcceptedAsset",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "isOperator", values: [string]): string;
  encodeFunctionData(
    functionFragment: "list",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "listedAssets",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "marketFeeInBps",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "offer",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "offeredAssets",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155BatchReceived",
    values: [string, string, BigNumberish[], BigNumberish[], BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155Received",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Received",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "pause", values?: undefined): string;
  encodeFunctionData(functionFragment: "paused", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "removeOperator",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "takeOffer",
    values: [string, BigNumberish, BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "unpause", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "updateAcceptedAsset",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "updateMarketFeeBps",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "MAX_MARKET_FEE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "acceptedAssets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "acceptedToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "buy", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "cancelOffer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "delist", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getListedAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOfferedAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOperators",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAcceptedAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isOperator", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "list", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "listedAssets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "marketFeeInBps",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "offer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "offeredAssets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155BatchReceived",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pause", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "paused", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "takeOffer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unpause", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "updateAcceptedAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateMarketFeeBps",
    data: BytesLike
  ): Result;

  events: {
    "AssetBought(address,uint256,address,address,uint256,uint256)": EventFragment;
    "AssetDelisted(address,uint256)": EventFragment;
    "AssetListed(address,uint256,uint256,uint256)": EventFragment;
    "AssetOfferCancelled(address,uint256,address)": EventFragment;
    "AssetOfferTaken(address,uint256,address,address,uint256,uint256)": EventFragment;
    "AssetOffered(address,uint256,address,uint256,uint256)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "Paused(address)": EventFragment;
    "Unpaused(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AssetBought"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AssetDelisted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AssetListed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AssetOfferCancelled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AssetOfferTaken"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AssetOffered"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Paused"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Unpaused"): EventFragment;
}

export type AssetBoughtEvent = TypedEvent<
  [string, BigNumber, string, string, BigNumber, BigNumber],
  {
    assetAddr: string;
    assetId: BigNumber;
    buyer: string;
    seller: string;
    priceInWei: BigNumber;
    amount: BigNumber;
  }
>;

export type AssetBoughtEventFilter = TypedEventFilter<AssetBoughtEvent>;

export type AssetDelistedEvent = TypedEvent<
  [string, BigNumber],
  { assetAddr: string; assetId: BigNumber }
>;

export type AssetDelistedEventFilter = TypedEventFilter<AssetDelistedEvent>;

export type AssetListedEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber],
  {
    assetAddr: string;
    assetId: BigNumber;
    priceInWei: BigNumber;
    amount: BigNumber;
  }
>;

export type AssetListedEventFilter = TypedEventFilter<AssetListedEvent>;

export type AssetOfferCancelledEvent = TypedEvent<
  [string, BigNumber, string],
  { assetAddr: string; assetId: BigNumber; buyer: string }
>;

export type AssetOfferCancelledEventFilter =
  TypedEventFilter<AssetOfferCancelledEvent>;

export type AssetOfferTakenEvent = TypedEvent<
  [string, BigNumber, string, string, BigNumber, BigNumber],
  {
    assetAddr: string;
    assetId: BigNumber;
    buyer: string;
    seller: string;
    priceInWei: BigNumber;
    amount: BigNumber;
  }
>;

export type AssetOfferTakenEventFilter = TypedEventFilter<AssetOfferTakenEvent>;

export type AssetOfferedEvent = TypedEvent<
  [string, BigNumber, string, BigNumber, BigNumber],
  {
    assetAddr: string;
    assetId: BigNumber;
    buyer: string;
    priceInWei: BigNumber;
    amount: BigNumber;
  }
>;

export type AssetOfferedEventFilter = TypedEventFilter<AssetOfferedEvent>;

export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  { previousOwner: string; newOwner: string }
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export type PausedEvent = TypedEvent<[string], { account: string }>;

export type PausedEventFilter = TypedEventFilter<PausedEvent>;

export type UnpausedEvent = TypedEvent<[string], { account: string }>;

export type UnpausedEventFilter = TypedEventFilter<UnpausedEvent>;

export interface MetroGalaxyMarketplace extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MetroGalaxyMarketplaceInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    MAX_MARKET_FEE(overrides?: CallOverrides): Promise<[BigNumber]>;

    acceptedAssets(arg0: string, overrides?: CallOverrides): Promise<[boolean]>;

    acceptedToken(overrides?: CallOverrides): Promise<[string]>;

    addOperator(
      operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    buy(
      assetAddr: string,
      assetId: BigNumberish,
      seller: string,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    cancelOffer(
      assetAddr: string,
      assetId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    delist(
      assetAddr: string,
      assetId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getListedAsset(
      assetAddr: string,
      assetId: BigNumberish,
      account: string,
      overrides?: CallOverrides
    ): Promise<[AssetStructOutput]>;

    getOfferedAsset(
      assetAddr: string,
      assetId: BigNumberish,
      account: string,
      overrides?: CallOverrides
    ): Promise<[AssetStructOutput]>;

    getOperators(overrides?: CallOverrides): Promise<[string[]]>;

    isAcceptedAsset(
      assetAddr: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isOperator(account: string, overrides?: CallOverrides): Promise<[boolean]>;

    list(
      assetAddr: string,
      assetId: BigNumberish,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    listedAssets(
      arg0: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { priceInWei: BigNumber; amount: BigNumber }
    >;

    marketFeeInBps(overrides?: CallOverrides): Promise<[BigNumber]>;

    offer(
      assetAddr: string,
      assetId: BigNumberish,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    offeredAssets(
      arg0: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { priceInWei: BigNumber; amount: BigNumber }
    >;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    paused(overrides?: CallOverrides): Promise<[boolean]>;

    removeOperator(
      operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    takeOffer(
      assetAddr: string,
      assetId: BigNumberish,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      buyer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateAcceptedAsset(
      assetAddr: string,
      isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateMarketFeeBps(
      feeBps: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  MAX_MARKET_FEE(overrides?: CallOverrides): Promise<BigNumber>;

  acceptedAssets(arg0: string, overrides?: CallOverrides): Promise<boolean>;

  acceptedToken(overrides?: CallOverrides): Promise<string>;

  addOperator(
    operator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  buy(
    assetAddr: string,
    assetId: BigNumberish,
    seller: string,
    priceInWei: BigNumberish,
    amount: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  cancelOffer(
    assetAddr: string,
    assetId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  delist(
    assetAddr: string,
    assetId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getListedAsset(
    assetAddr: string,
    assetId: BigNumberish,
    account: string,
    overrides?: CallOverrides
  ): Promise<AssetStructOutput>;

  getOfferedAsset(
    assetAddr: string,
    assetId: BigNumberish,
    account: string,
    overrides?: CallOverrides
  ): Promise<AssetStructOutput>;

  getOperators(overrides?: CallOverrides): Promise<string[]>;

  isAcceptedAsset(
    assetAddr: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isOperator(account: string, overrides?: CallOverrides): Promise<boolean>;

  list(
    assetAddr: string,
    assetId: BigNumberish,
    priceInWei: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  listedAssets(
    arg0: BytesLike,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { priceInWei: BigNumber; amount: BigNumber }
  >;

  marketFeeInBps(overrides?: CallOverrides): Promise<BigNumber>;

  offer(
    assetAddr: string,
    assetId: BigNumberish,
    priceInWei: BigNumberish,
    amount: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  offeredAssets(
    arg0: BytesLike,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { priceInWei: BigNumber; amount: BigNumber }
  >;

  onERC1155BatchReceived(
    arg0: string,
    arg1: string,
    arg2: BigNumberish[],
    arg3: BigNumberish[],
    arg4: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  onERC1155Received(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BigNumberish,
    arg4: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  onERC721Received(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  pause(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  paused(overrides?: CallOverrides): Promise<boolean>;

  removeOperator(
    operator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  takeOffer(
    assetAddr: string,
    assetId: BigNumberish,
    priceInWei: BigNumberish,
    amount: BigNumberish,
    buyer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  unpause(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateAcceptedAsset(
    assetAddr: string,
    isSupported: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateMarketFeeBps(
    feeBps: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    MAX_MARKET_FEE(overrides?: CallOverrides): Promise<BigNumber>;

    acceptedAssets(arg0: string, overrides?: CallOverrides): Promise<boolean>;

    acceptedToken(overrides?: CallOverrides): Promise<string>;

    addOperator(operator: string, overrides?: CallOverrides): Promise<void>;

    buy(
      assetAddr: string,
      assetId: BigNumberish,
      seller: string,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    cancelOffer(
      assetAddr: string,
      assetId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    delist(
      assetAddr: string,
      assetId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getListedAsset(
      assetAddr: string,
      assetId: BigNumberish,
      account: string,
      overrides?: CallOverrides
    ): Promise<AssetStructOutput>;

    getOfferedAsset(
      assetAddr: string,
      assetId: BigNumberish,
      account: string,
      overrides?: CallOverrides
    ): Promise<AssetStructOutput>;

    getOperators(overrides?: CallOverrides): Promise<string[]>;

    isAcceptedAsset(
      assetAddr: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isOperator(account: string, overrides?: CallOverrides): Promise<boolean>;

    list(
      assetAddr: string,
      assetId: BigNumberish,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    listedAssets(
      arg0: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { priceInWei: BigNumber; amount: BigNumber }
    >;

    marketFeeInBps(overrides?: CallOverrides): Promise<BigNumber>;

    offer(
      assetAddr: string,
      assetId: BigNumberish,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    offeredAssets(
      arg0: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { priceInWei: BigNumber; amount: BigNumber }
    >;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    pause(overrides?: CallOverrides): Promise<void>;

    paused(overrides?: CallOverrides): Promise<boolean>;

    removeOperator(operator: string, overrides?: CallOverrides): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    takeOffer(
      assetAddr: string,
      assetId: BigNumberish,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      buyer: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    unpause(overrides?: CallOverrides): Promise<void>;

    updateAcceptedAsset(
      assetAddr: string,
      isSupported: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    updateMarketFeeBps(
      feeBps: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "AssetBought(address,uint256,address,address,uint256,uint256)"(
      assetAddr?: string | null,
      assetId?: BigNumberish | null,
      buyer?: null,
      seller?: null,
      priceInWei?: null,
      amount?: null
    ): AssetBoughtEventFilter;
    AssetBought(
      assetAddr?: string | null,
      assetId?: BigNumberish | null,
      buyer?: null,
      seller?: null,
      priceInWei?: null,
      amount?: null
    ): AssetBoughtEventFilter;

    "AssetDelisted(address,uint256)"(
      assetAddr?: string | null,
      assetId?: BigNumberish | null
    ): AssetDelistedEventFilter;
    AssetDelisted(
      assetAddr?: string | null,
      assetId?: BigNumberish | null
    ): AssetDelistedEventFilter;

    "AssetListed(address,uint256,uint256,uint256)"(
      assetAddr?: string | null,
      assetId?: BigNumberish | null,
      priceInWei?: null,
      amount?: null
    ): AssetListedEventFilter;
    AssetListed(
      assetAddr?: string | null,
      assetId?: BigNumberish | null,
      priceInWei?: null,
      amount?: null
    ): AssetListedEventFilter;

    "AssetOfferCancelled(address,uint256,address)"(
      assetAddr?: string | null,
      assetId?: BigNumberish | null,
      buyer?: null
    ): AssetOfferCancelledEventFilter;
    AssetOfferCancelled(
      assetAddr?: string | null,
      assetId?: BigNumberish | null,
      buyer?: null
    ): AssetOfferCancelledEventFilter;

    "AssetOfferTaken(address,uint256,address,address,uint256,uint256)"(
      assetAddr?: string | null,
      assetId?: BigNumberish | null,
      buyer?: null,
      seller?: null,
      priceInWei?: null,
      amount?: null
    ): AssetOfferTakenEventFilter;
    AssetOfferTaken(
      assetAddr?: string | null,
      assetId?: BigNumberish | null,
      buyer?: null,
      seller?: null,
      priceInWei?: null,
      amount?: null
    ): AssetOfferTakenEventFilter;

    "AssetOffered(address,uint256,address,uint256,uint256)"(
      assetAddr?: string | null,
      assetId?: BigNumberish | null,
      buyer?: null,
      priceInWei?: null,
      amount?: null
    ): AssetOfferedEventFilter;
    AssetOffered(
      assetAddr?: string | null,
      assetId?: BigNumberish | null,
      buyer?: null,
      priceInWei?: null,
      amount?: null
    ): AssetOfferedEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;

    "Paused(address)"(account?: null): PausedEventFilter;
    Paused(account?: null): PausedEventFilter;

    "Unpaused(address)"(account?: null): UnpausedEventFilter;
    Unpaused(account?: null): UnpausedEventFilter;
  };

  estimateGas: {
    MAX_MARKET_FEE(overrides?: CallOverrides): Promise<BigNumber>;

    acceptedAssets(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    acceptedToken(overrides?: CallOverrides): Promise<BigNumber>;

    addOperator(
      operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    buy(
      assetAddr: string,
      assetId: BigNumberish,
      seller: string,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    cancelOffer(
      assetAddr: string,
      assetId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    delist(
      assetAddr: string,
      assetId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getListedAsset(
      assetAddr: string,
      assetId: BigNumberish,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOfferedAsset(
      assetAddr: string,
      assetId: BigNumberish,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOperators(overrides?: CallOverrides): Promise<BigNumber>;

    isAcceptedAsset(
      assetAddr: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isOperator(account: string, overrides?: CallOverrides): Promise<BigNumber>;

    list(
      assetAddr: string,
      assetId: BigNumberish,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    listedAssets(
      arg0: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    marketFeeInBps(overrides?: CallOverrides): Promise<BigNumber>;

    offer(
      assetAddr: string,
      assetId: BigNumberish,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    offeredAssets(
      arg0: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    paused(overrides?: CallOverrides): Promise<BigNumber>;

    removeOperator(
      operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    takeOffer(
      assetAddr: string,
      assetId: BigNumberish,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      buyer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateAcceptedAsset(
      assetAddr: string,
      isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateMarketFeeBps(
      feeBps: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    MAX_MARKET_FEE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    acceptedAssets(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    acceptedToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    addOperator(
      operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    buy(
      assetAddr: string,
      assetId: BigNumberish,
      seller: string,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    cancelOffer(
      assetAddr: string,
      assetId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    delist(
      assetAddr: string,
      assetId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getListedAsset(
      assetAddr: string,
      assetId: BigNumberish,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOfferedAsset(
      assetAddr: string,
      assetId: BigNumberish,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOperators(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    isAcceptedAsset(
      assetAddr: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isOperator(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    list(
      assetAddr: string,
      assetId: BigNumberish,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    listedAssets(
      arg0: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    marketFeeInBps(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    offer(
      assetAddr: string,
      assetId: BigNumberish,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    offeredAssets(
      arg0: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    removeOperator(
      operator: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    takeOffer(
      assetAddr: string,
      assetId: BigNumberish,
      priceInWei: BigNumberish,
      amount: BigNumberish,
      buyer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateAcceptedAsset(
      assetAddr: string,
      isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateMarketFeeBps(
      feeBps: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
