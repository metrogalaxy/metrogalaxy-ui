// source: proto/metronion/v1/metronion.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.proto.metronion.v1.GetListMetadataRequest', null, global);
goog.exportSymbol('proto.proto.metronion.v1.GetListMetadataResponse', null, global);
goog.exportSymbol('proto.proto.metronion.v1.GetMetadataRequest', null, global);
goog.exportSymbol('proto.proto.metronion.v1.GetMetadataResponse', null, global);
goog.exportSymbol('proto.proto.metronion.v1.GetMetronionActivitiesRequest', null, global);
goog.exportSymbol('proto.proto.metronion.v1.GetMetronionActivitiesResponse', null, global);
goog.exportSymbol('proto.proto.metronion.v1.GetMetronionListingRequest', null, global);
goog.exportSymbol('proto.proto.metronion.v1.GetMetronionListingResponse', null, global);
goog.exportSymbol('proto.proto.metronion.v1.GetMetronionOffersRequest', null, global);
goog.exportSymbol('proto.proto.metronion.v1.GetMetronionOffersResponse', null, global);
goog.exportSymbol('proto.proto.metronion.v1.MetronionActivity', null, global);
goog.exportSymbol('proto.proto.metronion.v1.MetronionListing', null, global);
goog.exportSymbol('proto.proto.metronion.v1.MetronionOffers', null, global);
goog.exportSymbol('proto.proto.metronion.v1.MetronionStats', null, global);
goog.exportSymbol('proto.proto.metronion.v1.Wearables', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.MetronionStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.metronion.v1.MetronionStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.MetronionStats.displayName = 'proto.proto.metronion.v1.MetronionStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.Wearables = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.metronion.v1.Wearables, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.Wearables.displayName = 'proto.proto.metronion.v1.Wearables';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.MetronionActivity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.metronion.v1.MetronionActivity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.MetronionActivity.displayName = 'proto.proto.metronion.v1.MetronionActivity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.MetronionOffers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.metronion.v1.MetronionOffers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.MetronionOffers.displayName = 'proto.proto.metronion.v1.MetronionOffers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.MetronionListing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.metronion.v1.MetronionListing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.MetronionListing.displayName = 'proto.proto.metronion.v1.MetronionListing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.GetMetadataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.metronion.v1.GetMetadataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.GetMetadataRequest.displayName = 'proto.proto.metronion.v1.GetMetadataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.GetMetadataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.metronion.v1.GetMetadataResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.metronion.v1.GetMetadataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.GetMetadataResponse.displayName = 'proto.proto.metronion.v1.GetMetadataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.GetListMetadataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.metronion.v1.GetListMetadataRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.metronion.v1.GetListMetadataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.GetListMetadataRequest.displayName = 'proto.proto.metronion.v1.GetListMetadataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.GetListMetadataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.metronion.v1.GetListMetadataResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.metronion.v1.GetListMetadataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.GetListMetadataResponse.displayName = 'proto.proto.metronion.v1.GetListMetadataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.GetMetronionActivitiesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.metronion.v1.GetMetronionActivitiesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.GetMetronionActivitiesRequest.displayName = 'proto.proto.metronion.v1.GetMetronionActivitiesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.GetMetronionActivitiesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.metronion.v1.GetMetronionActivitiesResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.metronion.v1.GetMetronionActivitiesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.GetMetronionActivitiesResponse.displayName = 'proto.proto.metronion.v1.GetMetronionActivitiesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.GetMetronionListingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.metronion.v1.GetMetronionListingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.GetMetronionListingRequest.displayName = 'proto.proto.metronion.v1.GetMetronionListingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.GetMetronionListingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.metronion.v1.GetMetronionListingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.GetMetronionListingResponse.displayName = 'proto.proto.metronion.v1.GetMetronionListingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.GetMetronionOffersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.metronion.v1.GetMetronionOffersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.GetMetronionOffersRequest.displayName = 'proto.proto.metronion.v1.GetMetronionOffersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.metronion.v1.GetMetronionOffersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.metronion.v1.GetMetronionOffersResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.metronion.v1.GetMetronionOffersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.metronion.v1.GetMetronionOffersResponse.displayName = 'proto.proto.metronion.v1.GetMetronionOffersResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.MetronionStats.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.MetronionStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.MetronionStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.MetronionStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    creativity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    charisma: jspb.Message.getFieldWithDefault(msg, 2, 0),
    resolve: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fitness: jspb.Message.getFieldWithDefault(msg, 4, 0),
    intellect: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.MetronionStats}
 */
proto.proto.metronion.v1.MetronionStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.MetronionStats;
  return proto.proto.metronion.v1.MetronionStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.MetronionStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.MetronionStats}
 */
proto.proto.metronion.v1.MetronionStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreativity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCharisma(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setResolve(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFitness(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIntellect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.MetronionStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.MetronionStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.MetronionStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.MetronionStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreativity();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCharisma();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getResolve();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getFitness();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getIntellect();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional uint64 creativity = 1;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionStats.prototype.getCreativity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionStats} returns this
 */
proto.proto.metronion.v1.MetronionStats.prototype.setCreativity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 charisma = 2;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionStats.prototype.getCharisma = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionStats} returns this
 */
proto.proto.metronion.v1.MetronionStats.prototype.setCharisma = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 resolve = 3;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionStats.prototype.getResolve = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionStats} returns this
 */
proto.proto.metronion.v1.MetronionStats.prototype.setResolve = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 fitness = 4;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionStats.prototype.getFitness = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionStats} returns this
 */
proto.proto.metronion.v1.MetronionStats.prototype.setFitness = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 intellect = 5;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionStats.prototype.getIntellect = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionStats} returns this
 */
proto.proto.metronion.v1.MetronionStats.prototype.setIntellect = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.Wearables.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.Wearables.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.Wearables} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.Wearables.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 4, ""),
    rarity: jspb.Message.getFieldWithDefault(msg, 5, ""),
    changeable: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isOrigin: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    isRequired: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    image: jspb.Message.getFieldWithDefault(msg, 9, ""),
    stats: (f = msg.getStats()) && proto.proto.metronion.v1.MetronionStats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.Wearables}
 */
proto.proto.metronion.v1.Wearables.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.Wearables;
  return proto.proto.metronion.v1.Wearables.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.Wearables} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.Wearables}
 */
proto.proto.metronion.v1.Wearables.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGender(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRarity(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChangeable(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsOrigin(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRequired(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 10:
      var value = new proto.proto.metronion.v1.MetronionStats;
      reader.readMessage(value,proto.proto.metronion.v1.MetronionStats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.Wearables.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.Wearables.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.Wearables} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.Wearables.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGender();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRarity();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getChangeable();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsOrigin();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getIsRequired();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.proto.metronion.v1.MetronionStats.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.metronion.v1.Wearables.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.Wearables} returns this
 */
proto.proto.metronion.v1.Wearables.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.proto.metronion.v1.Wearables.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.Wearables} returns this
 */
proto.proto.metronion.v1.Wearables.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.proto.metronion.v1.Wearables.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.Wearables} returns this
 */
proto.proto.metronion.v1.Wearables.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string gender = 4;
 * @return {string}
 */
proto.proto.metronion.v1.Wearables.prototype.getGender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.Wearables} returns this
 */
proto.proto.metronion.v1.Wearables.prototype.setGender = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string rarity = 5;
 * @return {string}
 */
proto.proto.metronion.v1.Wearables.prototype.getRarity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.Wearables} returns this
 */
proto.proto.metronion.v1.Wearables.prototype.setRarity = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool changeable = 6;
 * @return {boolean}
 */
proto.proto.metronion.v1.Wearables.prototype.getChangeable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.metronion.v1.Wearables} returns this
 */
proto.proto.metronion.v1.Wearables.prototype.setChangeable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool is_origin = 7;
 * @return {boolean}
 */
proto.proto.metronion.v1.Wearables.prototype.getIsOrigin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.metronion.v1.Wearables} returns this
 */
proto.proto.metronion.v1.Wearables.prototype.setIsOrigin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool is_required = 8;
 * @return {boolean}
 */
proto.proto.metronion.v1.Wearables.prototype.getIsRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.metronion.v1.Wearables} returns this
 */
proto.proto.metronion.v1.Wearables.prototype.setIsRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string image = 9;
 * @return {string}
 */
proto.proto.metronion.v1.Wearables.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.Wearables} returns this
 */
proto.proto.metronion.v1.Wearables.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional MetronionStats stats = 10;
 * @return {?proto.proto.metronion.v1.MetronionStats}
 */
proto.proto.metronion.v1.Wearables.prototype.getStats = function() {
  return /** @type{?proto.proto.metronion.v1.MetronionStats} */ (
    jspb.Message.getWrapperField(this, proto.proto.metronion.v1.MetronionStats, 10));
};


/**
 * @param {?proto.proto.metronion.v1.MetronionStats|undefined} value
 * @return {!proto.proto.metronion.v1.Wearables} returns this
*/
proto.proto.metronion.v1.Wearables.prototype.setStats = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.metronion.v1.Wearables} returns this
 */
proto.proto.metronion.v1.Wearables.prototype.clearStats = function() {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.metronion.v1.Wearables.prototype.hasStats = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.MetronionActivity.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.MetronionActivity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.MetronionActivity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.MetronionActivity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fromAccount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    toAccount: jspb.Message.getFieldWithDefault(msg, 4, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 6, 0),
    blockNumber: jspb.Message.getFieldWithDefault(msg, 7, 0),
    txHash: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.MetronionActivity}
 */
proto.proto.metronion.v1.MetronionActivity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.MetronionActivity;
  return proto.proto.metronion.v1.MetronionActivity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.MetronionActivity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.MetronionActivity}
 */
proto.proto.metronion.v1.MetronionActivity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromAccount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToAccount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestamp(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockNumber(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.MetronionActivity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.MetronionActivity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.MetronionActivity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.MetronionActivity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFromAccount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getToAccount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getBlockNumber();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getTxHash();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionActivity.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionActivity} returns this
 */
proto.proto.metronion.v1.MetronionActivity.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.proto.metronion.v1.MetronionActivity.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.MetronionActivity} returns this
 */
proto.proto.metronion.v1.MetronionActivity.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string from_account = 3;
 * @return {string}
 */
proto.proto.metronion.v1.MetronionActivity.prototype.getFromAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.MetronionActivity} returns this
 */
proto.proto.metronion.v1.MetronionActivity.prototype.setFromAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string to_account = 4;
 * @return {string}
 */
proto.proto.metronion.v1.MetronionActivity.prototype.getToAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.MetronionActivity} returns this
 */
proto.proto.metronion.v1.MetronionActivity.prototype.setToAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double price = 5;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionActivity.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionActivity} returns this
 */
proto.proto.metronion.v1.MetronionActivity.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional uint64 timestamp = 6;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionActivity.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionActivity} returns this
 */
proto.proto.metronion.v1.MetronionActivity.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 block_number = 7;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionActivity.prototype.getBlockNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionActivity} returns this
 */
proto.proto.metronion.v1.MetronionActivity.prototype.setBlockNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string tx_hash = 8;
 * @return {string}
 */
proto.proto.metronion.v1.MetronionActivity.prototype.getTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.MetronionActivity} returns this
 */
proto.proto.metronion.v1.MetronionActivity.prototype.setTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.MetronionOffers.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.MetronionOffers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.MetronionOffers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.MetronionOffers.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fromAccount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),
    blockNumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    txHash: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.MetronionOffers}
 */
proto.proto.metronion.v1.MetronionOffers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.MetronionOffers;
  return proto.proto.metronion.v1.MetronionOffers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.MetronionOffers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.MetronionOffers}
 */
proto.proto.metronion.v1.MetronionOffers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromAccount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestamp(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockNumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.MetronionOffers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.MetronionOffers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.MetronionOffers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.MetronionOffers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getFromAccount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getBlockNumber();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getTxHash();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionOffers.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionOffers} returns this
 */
proto.proto.metronion.v1.MetronionOffers.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string from_account = 2;
 * @return {string}
 */
proto.proto.metronion.v1.MetronionOffers.prototype.getFromAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.MetronionOffers} returns this
 */
proto.proto.metronion.v1.MetronionOffers.prototype.setFromAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double price = 3;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionOffers.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionOffers} returns this
 */
proto.proto.metronion.v1.MetronionOffers.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional uint64 timestamp = 4;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionOffers.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionOffers} returns this
 */
proto.proto.metronion.v1.MetronionOffers.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 block_number = 5;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionOffers.prototype.getBlockNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionOffers} returns this
 */
proto.proto.metronion.v1.MetronionOffers.prototype.setBlockNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string tx_hash = 6;
 * @return {string}
 */
proto.proto.metronion.v1.MetronionOffers.prototype.getTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.MetronionOffers} returns this
 */
proto.proto.metronion.v1.MetronionOffers.prototype.setTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.MetronionListing.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.MetronionListing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.MetronionListing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.MetronionListing.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fromAccount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),
    blockNumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    txHash: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.MetronionListing}
 */
proto.proto.metronion.v1.MetronionListing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.MetronionListing;
  return proto.proto.metronion.v1.MetronionListing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.MetronionListing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.MetronionListing}
 */
proto.proto.metronion.v1.MetronionListing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromAccount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestamp(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockNumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.MetronionListing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.MetronionListing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.MetronionListing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.MetronionListing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getFromAccount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getBlockNumber();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getTxHash();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionListing.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionListing} returns this
 */
proto.proto.metronion.v1.MetronionListing.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string from_account = 2;
 * @return {string}
 */
proto.proto.metronion.v1.MetronionListing.prototype.getFromAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.MetronionListing} returns this
 */
proto.proto.metronion.v1.MetronionListing.prototype.setFromAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double price = 3;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionListing.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionListing} returns this
 */
proto.proto.metronion.v1.MetronionListing.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional uint64 timestamp = 4;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionListing.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionListing} returns this
 */
proto.proto.metronion.v1.MetronionListing.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 block_number = 5;
 * @return {number}
 */
proto.proto.metronion.v1.MetronionListing.prototype.getBlockNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.MetronionListing} returns this
 */
proto.proto.metronion.v1.MetronionListing.prototype.setBlockNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string tx_hash = 6;
 * @return {string}
 */
proto.proto.metronion.v1.MetronionListing.prototype.getTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.MetronionListing} returns this
 */
proto.proto.metronion.v1.MetronionListing.prototype.setTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.GetMetadataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.GetMetadataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.GetMetadataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetadataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.GetMetadataRequest}
 */
proto.proto.metronion.v1.GetMetadataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.GetMetadataRequest;
  return proto.proto.metronion.v1.GetMetadataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.GetMetadataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.GetMetadataRequest}
 */
proto.proto.metronion.v1.GetMetadataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.GetMetadataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.GetMetadataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.GetMetadataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetadataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.UInt64Value id = 1;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.proto.metronion.v1.GetMetadataRequest.prototype.getId = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 1));
};


/**
 * @param {?proto.google.protobuf.UInt64Value|undefined} value
 * @return {!proto.proto.metronion.v1.GetMetadataRequest} returns this
*/
proto.proto.metronion.v1.GetMetadataRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.metronion.v1.GetMetadataRequest} returns this
 */
proto.proto.metronion.v1.GetMetadataRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.metronion.v1.GetMetadataRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.metronion.v1.GetMetadataResponse.repeatedFields_ = [20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.GetMetadataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.GetMetadataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetadataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    versionId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    createdAtTimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),
    updatedAtTimestamp: jspb.Message.getFieldWithDefault(msg, 5, 0),
    createdAtBlock: jspb.Message.getFieldWithDefault(msg, 6, 0),
    updatedAtBlock: jspb.Message.getFieldWithDefault(msg, 7, 0),
    owner: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lastPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    currentPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    topBid: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    listedBy: jspb.Message.getFieldWithDefault(msg, 12, ""),
    image: jspb.Message.getFieldWithDefault(msg, 13, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 14, ""),
    type: jspb.Message.getFieldWithDefault(msg, 15, ""),
    star: jspb.Message.getFieldWithDefault(msg, 16, 0),
    specialStar: jspb.Message.getFieldWithDefault(msg, 17, 0),
    baseStats: (f = msg.getBaseStats()) && proto.proto.metronion.v1.MetronionStats.toObject(includeInstance, f),
    specialStats: (f = msg.getSpecialStats()) && proto.proto.metronion.v1.MetronionStats.toObject(includeInstance, f),
    wearablesList: jspb.Message.toObjectList(msg.getWearablesList(),
    proto.proto.metronion.v1.Wearables.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.GetMetadataResponse}
 */
proto.proto.metronion.v1.GetMetadataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.GetMetadataResponse;
  return proto.proto.metronion.v1.GetMetadataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.GetMetadataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.GetMetadataResponse}
 */
proto.proto.metronion.v1.GetMetadataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVersionId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAtTimestamp(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedAtTimestamp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAtBlock(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedAtBlock(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastPrice(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentPrice(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTopBid(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setListedBy(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setGender(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStar(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSpecialStar(value);
      break;
    case 18:
      var value = new proto.proto.metronion.v1.MetronionStats;
      reader.readMessage(value,proto.proto.metronion.v1.MetronionStats.deserializeBinaryFromReader);
      msg.setBaseStats(value);
      break;
    case 19:
      var value = new proto.proto.metronion.v1.MetronionStats;
      reader.readMessage(value,proto.proto.metronion.v1.MetronionStats.deserializeBinaryFromReader);
      msg.setSpecialStats(value);
      break;
    case 20:
      var value = new proto.proto.metronion.v1.Wearables;
      reader.readMessage(value,proto.proto.metronion.v1.Wearables.deserializeBinaryFromReader);
      msg.addWearables(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.GetMetadataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.GetMetadataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetadataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVersionId();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getCreatedAtTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getUpdatedAtTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getCreatedAtBlock();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getUpdatedAtBlock();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLastPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getCurrentPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getTopBid();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getListedBy();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getGender();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getStar();
  if (f !== 0) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = message.getSpecialStar();
  if (f !== 0) {
    writer.writeUint64(
      17,
      f
    );
  }
  f = message.getBaseStats();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.proto.metronion.v1.MetronionStats.serializeBinaryToWriter
    );
  }
  f = message.getSpecialStats();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.proto.metronion.v1.MetronionStats.serializeBinaryToWriter
    );
  }
  f = message.getWearablesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.proto.metronion.v1.Wearables.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 version_id = 3;
 * @return {number}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getVersionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setVersionId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 created_at_timestamp = 4;
 * @return {number}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getCreatedAtTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setCreatedAtTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 updated_at_timestamp = 5;
 * @return {number}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getUpdatedAtTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setUpdatedAtTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 created_at_block = 6;
 * @return {number}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getCreatedAtBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setCreatedAtBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 updated_at_block = 7;
 * @return {number}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getUpdatedAtBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setUpdatedAtBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string owner = 8;
 * @return {string}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional double last_price = 9;
 * @return {number}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getLastPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setLastPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double current_price = 10;
 * @return {number}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getCurrentPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setCurrentPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double top_bid = 11;
 * @return {number}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getTopBid = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setTopBid = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional string listed_by = 12;
 * @return {string}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getListedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setListedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string image = 13;
 * @return {string}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string gender = 14;
 * @return {string}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getGender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setGender = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string type = 15;
 * @return {string}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional uint64 star = 16;
 * @return {number}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getStar = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setStar = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional uint64 special_star = 17;
 * @return {number}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getSpecialStar = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.setSpecialStar = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional MetronionStats base_stats = 18;
 * @return {?proto.proto.metronion.v1.MetronionStats}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getBaseStats = function() {
  return /** @type{?proto.proto.metronion.v1.MetronionStats} */ (
    jspb.Message.getWrapperField(this, proto.proto.metronion.v1.MetronionStats, 18));
};


/**
 * @param {?proto.proto.metronion.v1.MetronionStats|undefined} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
*/
proto.proto.metronion.v1.GetMetadataResponse.prototype.setBaseStats = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.clearBaseStats = function() {
  return this.setBaseStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.hasBaseStats = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional MetronionStats special_stats = 19;
 * @return {?proto.proto.metronion.v1.MetronionStats}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getSpecialStats = function() {
  return /** @type{?proto.proto.metronion.v1.MetronionStats} */ (
    jspb.Message.getWrapperField(this, proto.proto.metronion.v1.MetronionStats, 19));
};


/**
 * @param {?proto.proto.metronion.v1.MetronionStats|undefined} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
*/
proto.proto.metronion.v1.GetMetadataResponse.prototype.setSpecialStats = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.clearSpecialStats = function() {
  return this.setSpecialStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.hasSpecialStats = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * repeated Wearables wearables = 20;
 * @return {!Array<!proto.proto.metronion.v1.Wearables>}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.getWearablesList = function() {
  return /** @type{!Array<!proto.proto.metronion.v1.Wearables>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.metronion.v1.Wearables, 20));
};


/**
 * @param {!Array<!proto.proto.metronion.v1.Wearables>} value
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
*/
proto.proto.metronion.v1.GetMetadataResponse.prototype.setWearablesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.proto.metronion.v1.Wearables=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.metronion.v1.Wearables}
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.addWearables = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.proto.metronion.v1.Wearables, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.metronion.v1.GetMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetMetadataResponse.prototype.clearWearablesList = function() {
  return this.setWearablesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.metronion.v1.GetListMetadataRequest.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.GetListMetadataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.GetListMetadataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetListMetadataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: (f = msg.getAccount()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    sort: jspb.Message.getFieldWithDefault(msg, 2, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    id: (f = msg.getId()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f),
    genderList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    statusList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    statMap: (f = msg.getStatMap()) ? f.toObject(includeInstance, proto.google.protobuf.ListValue.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest}
 */
proto.proto.metronion.v1.GetListMetadataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.GetListMetadataRequest;
  return proto.proto.metronion.v1.GetListMetadataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.GetListMetadataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest}
 */
proto.proto.metronion.v1.GetListMetadataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSort(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addGender(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addStatus(value);
      break;
    case 8:
      var value = msg.getStatMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.ListValue.deserializeBinaryFromReader, "", new proto.google.protobuf.ListValue());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.GetListMetadataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.GetListMetadataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetListMetadataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getSort();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
  f = message.getGenderList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getStatMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.ListValue.serializeBinaryToWriter);
  }
};


/**
 * optional google.protobuf.StringValue account = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.getAccount = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
*/
proto.proto.metronion.v1.GetListMetadataRequest.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string sort = 2;
 * @return {string}
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.getSort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.setSort = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 offset = 3;
 * @return {number}
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 limit = 4;
 * @return {number}
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.UInt64Value id = 5;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.getId = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 5));
};


/**
 * @param {?proto.google.protobuf.UInt64Value|undefined} value
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
*/
proto.proto.metronion.v1.GetListMetadataRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string gender = 6;
 * @return {!Array<string>}
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.getGenderList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.setGenderList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.addGender = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.clearGenderList = function() {
  return this.setGenderList([]);
};


/**
 * repeated string status = 7;
 * @return {!Array<string>}
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.getStatusList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.setStatusList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.addStatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};


/**
 * map<string, google.protobuf.ListValue> stat = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.ListValue>}
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.getStatMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.ListValue>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      proto.google.protobuf.ListValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.proto.metronion.v1.GetListMetadataRequest} returns this
 */
proto.proto.metronion.v1.GetListMetadataRequest.prototype.clearStatMap = function() {
  this.getStatMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.metronion.v1.GetListMetadataResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.GetListMetadataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.GetListMetadataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.GetListMetadataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetListMetadataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.proto.metronion.v1.GetMetadataResponse.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.GetListMetadataResponse}
 */
proto.proto.metronion.v1.GetListMetadataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.GetListMetadataResponse;
  return proto.proto.metronion.v1.GetListMetadataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.GetListMetadataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.GetListMetadataResponse}
 */
proto.proto.metronion.v1.GetListMetadataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.metronion.v1.GetMetadataResponse;
      reader.readMessage(value,proto.proto.metronion.v1.GetMetadataResponse.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.GetListMetadataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.GetListMetadataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.GetListMetadataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetListMetadataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.metronion.v1.GetMetadataResponse.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * repeated GetMetadataResponse data = 1;
 * @return {!Array<!proto.proto.metronion.v1.GetMetadataResponse>}
 */
proto.proto.metronion.v1.GetListMetadataResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.proto.metronion.v1.GetMetadataResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.metronion.v1.GetMetadataResponse, 1));
};


/**
 * @param {!Array<!proto.proto.metronion.v1.GetMetadataResponse>} value
 * @return {!proto.proto.metronion.v1.GetListMetadataResponse} returns this
*/
proto.proto.metronion.v1.GetListMetadataResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.metronion.v1.GetMetadataResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.metronion.v1.GetMetadataResponse}
 */
proto.proto.metronion.v1.GetListMetadataResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.metronion.v1.GetMetadataResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.metronion.v1.GetListMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetListMetadataResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional uint64 count = 2;
 * @return {number}
 */
proto.proto.metronion.v1.GetListMetadataResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.metronion.v1.GetListMetadataResponse} returns this
 */
proto.proto.metronion.v1.GetListMetadataResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.GetMetronionActivitiesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.GetMetronionActivitiesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.GetMetronionActivitiesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetronionActivitiesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f),
    sort: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.GetMetronionActivitiesRequest}
 */
proto.proto.metronion.v1.GetMetronionActivitiesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.GetMetronionActivitiesRequest;
  return proto.proto.metronion.v1.GetMetronionActivitiesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.GetMetronionActivitiesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.GetMetronionActivitiesRequest}
 */
proto.proto.metronion.v1.GetMetronionActivitiesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.GetMetronionActivitiesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.GetMetronionActivitiesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.GetMetronionActivitiesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetronionActivitiesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
  f = message.getSort();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.UInt64Value id = 1;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.proto.metronion.v1.GetMetronionActivitiesRequest.prototype.getId = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 1));
};


/**
 * @param {?proto.google.protobuf.UInt64Value|undefined} value
 * @return {!proto.proto.metronion.v1.GetMetronionActivitiesRequest} returns this
*/
proto.proto.metronion.v1.GetMetronionActivitiesRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.metronion.v1.GetMetronionActivitiesRequest} returns this
 */
proto.proto.metronion.v1.GetMetronionActivitiesRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.metronion.v1.GetMetronionActivitiesRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string sort = 2;
 * @return {string}
 */
proto.proto.metronion.v1.GetMetronionActivitiesRequest.prototype.getSort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.GetMetronionActivitiesRequest} returns this
 */
proto.proto.metronion.v1.GetMetronionActivitiesRequest.prototype.setSort = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.metronion.v1.GetMetronionActivitiesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.GetMetronionActivitiesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.GetMetronionActivitiesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.GetMetronionActivitiesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetronionActivitiesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.proto.metronion.v1.MetronionActivity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.GetMetronionActivitiesResponse}
 */
proto.proto.metronion.v1.GetMetronionActivitiesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.GetMetronionActivitiesResponse;
  return proto.proto.metronion.v1.GetMetronionActivitiesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.GetMetronionActivitiesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.GetMetronionActivitiesResponse}
 */
proto.proto.metronion.v1.GetMetronionActivitiesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.metronion.v1.MetronionActivity;
      reader.readMessage(value,proto.proto.metronion.v1.MetronionActivity.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.GetMetronionActivitiesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.GetMetronionActivitiesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.GetMetronionActivitiesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetronionActivitiesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.metronion.v1.MetronionActivity.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MetronionActivity data = 1;
 * @return {!Array<!proto.proto.metronion.v1.MetronionActivity>}
 */
proto.proto.metronion.v1.GetMetronionActivitiesResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.proto.metronion.v1.MetronionActivity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.metronion.v1.MetronionActivity, 1));
};


/**
 * @param {!Array<!proto.proto.metronion.v1.MetronionActivity>} value
 * @return {!proto.proto.metronion.v1.GetMetronionActivitiesResponse} returns this
*/
proto.proto.metronion.v1.GetMetronionActivitiesResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.metronion.v1.MetronionActivity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.metronion.v1.MetronionActivity}
 */
proto.proto.metronion.v1.GetMetronionActivitiesResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.metronion.v1.MetronionActivity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.metronion.v1.GetMetronionActivitiesResponse} returns this
 */
proto.proto.metronion.v1.GetMetronionActivitiesResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.GetMetronionListingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.GetMetronionListingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.GetMetronionListingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetronionListingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.GetMetronionListingRequest}
 */
proto.proto.metronion.v1.GetMetronionListingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.GetMetronionListingRequest;
  return proto.proto.metronion.v1.GetMetronionListingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.GetMetronionListingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.GetMetronionListingRequest}
 */
proto.proto.metronion.v1.GetMetronionListingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.GetMetronionListingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.GetMetronionListingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.GetMetronionListingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetronionListingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.UInt64Value id = 1;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.proto.metronion.v1.GetMetronionListingRequest.prototype.getId = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 1));
};


/**
 * @param {?proto.google.protobuf.UInt64Value|undefined} value
 * @return {!proto.proto.metronion.v1.GetMetronionListingRequest} returns this
*/
proto.proto.metronion.v1.GetMetronionListingRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.metronion.v1.GetMetronionListingRequest} returns this
 */
proto.proto.metronion.v1.GetMetronionListingRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.metronion.v1.GetMetronionListingRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.GetMetronionListingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.GetMetronionListingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.GetMetronionListingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetronionListingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.proto.metronion.v1.MetronionListing.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.GetMetronionListingResponse}
 */
proto.proto.metronion.v1.GetMetronionListingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.GetMetronionListingResponse;
  return proto.proto.metronion.v1.GetMetronionListingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.GetMetronionListingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.GetMetronionListingResponse}
 */
proto.proto.metronion.v1.GetMetronionListingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.metronion.v1.MetronionListing;
      reader.readMessage(value,proto.proto.metronion.v1.MetronionListing.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.GetMetronionListingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.GetMetronionListingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.GetMetronionListingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetronionListingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.proto.metronion.v1.MetronionListing.serializeBinaryToWriter
    );
  }
};


/**
 * optional MetronionListing data = 1;
 * @return {?proto.proto.metronion.v1.MetronionListing}
 */
proto.proto.metronion.v1.GetMetronionListingResponse.prototype.getData = function() {
  return /** @type{?proto.proto.metronion.v1.MetronionListing} */ (
    jspb.Message.getWrapperField(this, proto.proto.metronion.v1.MetronionListing, 1));
};


/**
 * @param {?proto.proto.metronion.v1.MetronionListing|undefined} value
 * @return {!proto.proto.metronion.v1.GetMetronionListingResponse} returns this
*/
proto.proto.metronion.v1.GetMetronionListingResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.metronion.v1.GetMetronionListingResponse} returns this
 */
proto.proto.metronion.v1.GetMetronionListingResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.metronion.v1.GetMetronionListingResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.GetMetronionOffersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.GetMetronionOffersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.GetMetronionOffersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetronionOffersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f),
    sort: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.GetMetronionOffersRequest}
 */
proto.proto.metronion.v1.GetMetronionOffersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.GetMetronionOffersRequest;
  return proto.proto.metronion.v1.GetMetronionOffersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.GetMetronionOffersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.GetMetronionOffersRequest}
 */
proto.proto.metronion.v1.GetMetronionOffersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.GetMetronionOffersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.GetMetronionOffersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.GetMetronionOffersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetronionOffersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
  f = message.getSort();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.UInt64Value id = 1;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.proto.metronion.v1.GetMetronionOffersRequest.prototype.getId = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 1));
};


/**
 * @param {?proto.google.protobuf.UInt64Value|undefined} value
 * @return {!proto.proto.metronion.v1.GetMetronionOffersRequest} returns this
*/
proto.proto.metronion.v1.GetMetronionOffersRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.metronion.v1.GetMetronionOffersRequest} returns this
 */
proto.proto.metronion.v1.GetMetronionOffersRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.metronion.v1.GetMetronionOffersRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string sort = 2;
 * @return {string}
 */
proto.proto.metronion.v1.GetMetronionOffersRequest.prototype.getSort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.metronion.v1.GetMetronionOffersRequest} returns this
 */
proto.proto.metronion.v1.GetMetronionOffersRequest.prototype.setSort = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.metronion.v1.GetMetronionOffersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.metronion.v1.GetMetronionOffersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.metronion.v1.GetMetronionOffersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.metronion.v1.GetMetronionOffersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetronionOffersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.proto.metronion.v1.MetronionOffers.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.metronion.v1.GetMetronionOffersResponse}
 */
proto.proto.metronion.v1.GetMetronionOffersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.metronion.v1.GetMetronionOffersResponse;
  return proto.proto.metronion.v1.GetMetronionOffersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.metronion.v1.GetMetronionOffersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.metronion.v1.GetMetronionOffersResponse}
 */
proto.proto.metronion.v1.GetMetronionOffersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.metronion.v1.MetronionOffers;
      reader.readMessage(value,proto.proto.metronion.v1.MetronionOffers.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.metronion.v1.GetMetronionOffersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.metronion.v1.GetMetronionOffersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.metronion.v1.GetMetronionOffersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.metronion.v1.GetMetronionOffersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.metronion.v1.MetronionOffers.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MetronionOffers data = 1;
 * @return {!Array<!proto.proto.metronion.v1.MetronionOffers>}
 */
proto.proto.metronion.v1.GetMetronionOffersResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.proto.metronion.v1.MetronionOffers>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.metronion.v1.MetronionOffers, 1));
};


/**
 * @param {!Array<!proto.proto.metronion.v1.MetronionOffers>} value
 * @return {!proto.proto.metronion.v1.GetMetronionOffersResponse} returns this
*/
proto.proto.metronion.v1.GetMetronionOffersResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.metronion.v1.MetronionOffers=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.metronion.v1.MetronionOffers}
 */
proto.proto.metronion.v1.GetMetronionOffersResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.metronion.v1.MetronionOffers, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.metronion.v1.GetMetronionOffersResponse} returns this
 */
proto.proto.metronion.v1.GetMetronionOffersResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


goog.object.extend(exports, proto.proto.metronion.v1);
