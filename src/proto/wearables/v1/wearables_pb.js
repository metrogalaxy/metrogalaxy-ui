// source: proto/wearables/v1/wearables.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.proto.wearables.v1.GetListWearablesRequest', null, global);
goog.exportSymbol('proto.proto.wearables.v1.GetListWearablesResponse', null, global);
goog.exportSymbol('proto.proto.wearables.v1.GetWearablesRequest', null, global);
goog.exportSymbol('proto.proto.wearables.v1.GetWearablesResponse', null, global);
goog.exportSymbol('proto.proto.wearables.v1.MetronionStats', null, global);
goog.exportSymbol('proto.proto.wearables.v1.Wearables', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.wearables.v1.MetronionStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.wearables.v1.MetronionStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.wearables.v1.MetronionStats.displayName = 'proto.proto.wearables.v1.MetronionStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.wearables.v1.Wearables = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.wearables.v1.Wearables, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.wearables.v1.Wearables.displayName = 'proto.proto.wearables.v1.Wearables';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.wearables.v1.GetWearablesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.wearables.v1.GetWearablesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.wearables.v1.GetWearablesRequest.displayName = 'proto.proto.wearables.v1.GetWearablesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.wearables.v1.GetWearablesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.wearables.v1.GetWearablesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.wearables.v1.GetWearablesResponse.displayName = 'proto.proto.wearables.v1.GetWearablesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.wearables.v1.GetListWearablesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.wearables.v1.GetListWearablesRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.wearables.v1.GetListWearablesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.wearables.v1.GetListWearablesRequest.displayName = 'proto.proto.wearables.v1.GetListWearablesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.wearables.v1.GetListWearablesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.wearables.v1.GetListWearablesResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.wearables.v1.GetListWearablesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.wearables.v1.GetListWearablesResponse.displayName = 'proto.proto.wearables.v1.GetListWearablesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.wearables.v1.MetronionStats.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.wearables.v1.MetronionStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.wearables.v1.MetronionStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.wearables.v1.MetronionStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    creativity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    charisma: jspb.Message.getFieldWithDefault(msg, 2, 0),
    resolve: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fitness: jspb.Message.getFieldWithDefault(msg, 4, 0),
    intellect: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.wearables.v1.MetronionStats}
 */
proto.proto.wearables.v1.MetronionStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.wearables.v1.MetronionStats;
  return proto.proto.wearables.v1.MetronionStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.wearables.v1.MetronionStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.wearables.v1.MetronionStats}
 */
proto.proto.wearables.v1.MetronionStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreativity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCharisma(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setResolve(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFitness(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIntellect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.wearables.v1.MetronionStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.wearables.v1.MetronionStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.wearables.v1.MetronionStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.wearables.v1.MetronionStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreativity();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCharisma();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getResolve();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getFitness();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getIntellect();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional uint64 creativity = 1;
 * @return {number}
 */
proto.proto.wearables.v1.MetronionStats.prototype.getCreativity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.wearables.v1.MetronionStats} returns this
 */
proto.proto.wearables.v1.MetronionStats.prototype.setCreativity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 charisma = 2;
 * @return {number}
 */
proto.proto.wearables.v1.MetronionStats.prototype.getCharisma = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.wearables.v1.MetronionStats} returns this
 */
proto.proto.wearables.v1.MetronionStats.prototype.setCharisma = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 resolve = 3;
 * @return {number}
 */
proto.proto.wearables.v1.MetronionStats.prototype.getResolve = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.wearables.v1.MetronionStats} returns this
 */
proto.proto.wearables.v1.MetronionStats.prototype.setResolve = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 fitness = 4;
 * @return {number}
 */
proto.proto.wearables.v1.MetronionStats.prototype.getFitness = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.wearables.v1.MetronionStats} returns this
 */
proto.proto.wearables.v1.MetronionStats.prototype.setFitness = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 intellect = 5;
 * @return {number}
 */
proto.proto.wearables.v1.MetronionStats.prototype.getIntellect = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.wearables.v1.MetronionStats} returns this
 */
proto.proto.wearables.v1.MetronionStats.prototype.setIntellect = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.wearables.v1.Wearables.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.wearables.v1.Wearables.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.wearables.v1.Wearables} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.wearables.v1.Wearables.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 4, ""),
    rarity: jspb.Message.getFieldWithDefault(msg, 5, ""),
    changeable: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isOrigin: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    isRequired: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    image: jspb.Message.getFieldWithDefault(msg, 9, ""),
    stats: (f = msg.getStats()) && proto.proto.wearables.v1.MetronionStats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.wearables.v1.Wearables}
 */
proto.proto.wearables.v1.Wearables.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.wearables.v1.Wearables;
  return proto.proto.wearables.v1.Wearables.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.wearables.v1.Wearables} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.wearables.v1.Wearables}
 */
proto.proto.wearables.v1.Wearables.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGender(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRarity(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChangeable(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsOrigin(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRequired(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 10:
      var value = new proto.proto.wearables.v1.MetronionStats;
      reader.readMessage(value,proto.proto.wearables.v1.MetronionStats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.wearables.v1.Wearables.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.wearables.v1.Wearables.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.wearables.v1.Wearables} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.wearables.v1.Wearables.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGender();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRarity();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getChangeable();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsOrigin();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getIsRequired();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.proto.wearables.v1.MetronionStats.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.wearables.v1.Wearables.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.wearables.v1.Wearables} returns this
 */
proto.proto.wearables.v1.Wearables.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.proto.wearables.v1.Wearables.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.wearables.v1.Wearables} returns this
 */
proto.proto.wearables.v1.Wearables.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.proto.wearables.v1.Wearables.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.wearables.v1.Wearables} returns this
 */
proto.proto.wearables.v1.Wearables.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string gender = 4;
 * @return {string}
 */
proto.proto.wearables.v1.Wearables.prototype.getGender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.wearables.v1.Wearables} returns this
 */
proto.proto.wearables.v1.Wearables.prototype.setGender = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string rarity = 5;
 * @return {string}
 */
proto.proto.wearables.v1.Wearables.prototype.getRarity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.wearables.v1.Wearables} returns this
 */
proto.proto.wearables.v1.Wearables.prototype.setRarity = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool changeable = 6;
 * @return {boolean}
 */
proto.proto.wearables.v1.Wearables.prototype.getChangeable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.wearables.v1.Wearables} returns this
 */
proto.proto.wearables.v1.Wearables.prototype.setChangeable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool is_origin = 7;
 * @return {boolean}
 */
proto.proto.wearables.v1.Wearables.prototype.getIsOrigin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.wearables.v1.Wearables} returns this
 */
proto.proto.wearables.v1.Wearables.prototype.setIsOrigin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool is_required = 8;
 * @return {boolean}
 */
proto.proto.wearables.v1.Wearables.prototype.getIsRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.wearables.v1.Wearables} returns this
 */
proto.proto.wearables.v1.Wearables.prototype.setIsRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string image = 9;
 * @return {string}
 */
proto.proto.wearables.v1.Wearables.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.wearables.v1.Wearables} returns this
 */
proto.proto.wearables.v1.Wearables.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional MetronionStats stats = 10;
 * @return {?proto.proto.wearables.v1.MetronionStats}
 */
proto.proto.wearables.v1.Wearables.prototype.getStats = function() {
  return /** @type{?proto.proto.wearables.v1.MetronionStats} */ (
    jspb.Message.getWrapperField(this, proto.proto.wearables.v1.MetronionStats, 10));
};


/**
 * @param {?proto.proto.wearables.v1.MetronionStats|undefined} value
 * @return {!proto.proto.wearables.v1.Wearables} returns this
*/
proto.proto.wearables.v1.Wearables.prototype.setStats = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.wearables.v1.Wearables} returns this
 */
proto.proto.wearables.v1.Wearables.prototype.clearStats = function() {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.wearables.v1.Wearables.prototype.hasStats = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.wearables.v1.GetWearablesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.wearables.v1.GetWearablesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.wearables.v1.GetWearablesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.wearables.v1.GetWearablesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.wearables.v1.GetWearablesRequest}
 */
proto.proto.wearables.v1.GetWearablesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.wearables.v1.GetWearablesRequest;
  return proto.proto.wearables.v1.GetWearablesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.wearables.v1.GetWearablesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.wearables.v1.GetWearablesRequest}
 */
proto.proto.wearables.v1.GetWearablesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.wearables.v1.GetWearablesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.wearables.v1.GetWearablesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.wearables.v1.GetWearablesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.wearables.v1.GetWearablesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.UInt64Value id = 1;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.proto.wearables.v1.GetWearablesRequest.prototype.getId = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 1));
};


/**
 * @param {?proto.google.protobuf.UInt64Value|undefined} value
 * @return {!proto.proto.wearables.v1.GetWearablesRequest} returns this
*/
proto.proto.wearables.v1.GetWearablesRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.wearables.v1.GetWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetWearablesRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.wearables.v1.GetWearablesRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.wearables.v1.GetWearablesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.wearables.v1.GetWearablesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.wearables.v1.GetWearablesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.wearables.v1.GetWearablesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.wearables.v1.GetWearablesResponse}
 */
proto.proto.wearables.v1.GetWearablesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.wearables.v1.GetWearablesResponse;
  return proto.proto.wearables.v1.GetWearablesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.wearables.v1.GetWearablesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.wearables.v1.GetWearablesResponse}
 */
proto.proto.wearables.v1.GetWearablesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.wearables.v1.GetWearablesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.wearables.v1.GetWearablesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.wearables.v1.GetWearablesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.wearables.v1.GetWearablesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.wearables.v1.GetListWearablesRequest.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.wearables.v1.GetListWearablesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.wearables.v1.GetListWearablesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.wearables.v1.GetListWearablesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: (f = msg.getAccount()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    sort: jspb.Message.getFieldWithDefault(msg, 2, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    id: (f = msg.getId()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f),
    genderList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    statusList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    rarity: jspb.Message.getFieldWithDefault(msg, 8, ""),
    type: jspb.Message.getFieldWithDefault(msg, 9, ""),
    statMap: (f = msg.getStatMap()) ? f.toObject(includeInstance, proto.google.protobuf.ListValue.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest}
 */
proto.proto.wearables.v1.GetListWearablesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.wearables.v1.GetListWearablesRequest;
  return proto.proto.wearables.v1.GetListWearablesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.wearables.v1.GetListWearablesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest}
 */
proto.proto.wearables.v1.GetListWearablesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSort(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addGender(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addStatus(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRarity(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 10:
      var value = msg.getStatMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.ListValue.deserializeBinaryFromReader, "", new proto.google.protobuf.ListValue());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.wearables.v1.GetListWearablesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.wearables.v1.GetListWearablesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.wearables.v1.GetListWearablesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getSort();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
  f = message.getGenderList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getRarity();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStatMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.ListValue.serializeBinaryToWriter);
  }
};


/**
 * optional google.protobuf.StringValue account = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.getAccount = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
*/
proto.proto.wearables.v1.GetListWearablesRequest.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string sort = 2;
 * @return {string}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.getSort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.setSort = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 offset = 3;
 * @return {number}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 limit = 4;
 * @return {number}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.UInt64Value id = 5;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.getId = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 5));
};


/**
 * @param {?proto.google.protobuf.UInt64Value|undefined} value
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
*/
proto.proto.wearables.v1.GetListWearablesRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string gender = 6;
 * @return {!Array<string>}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.getGenderList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.setGenderList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.addGender = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.clearGenderList = function() {
  return this.setGenderList([]);
};


/**
 * repeated string status = 7;
 * @return {!Array<string>}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.getStatusList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.setStatusList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.addStatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};


/**
 * optional string rarity = 8;
 * @return {string}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.getRarity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.setRarity = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string type = 9;
 * @return {string}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * map<string, google.protobuf.ListValue> stat = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.ListValue>}
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.getStatMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.ListValue>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      proto.google.protobuf.ListValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.proto.wearables.v1.GetListWearablesRequest} returns this
 */
proto.proto.wearables.v1.GetListWearablesRequest.prototype.clearStatMap = function() {
  this.getStatMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.wearables.v1.GetListWearablesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.wearables.v1.GetListWearablesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.wearables.v1.GetListWearablesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.wearables.v1.GetListWearablesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.wearables.v1.GetListWearablesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    wearablesList: jspb.Message.toObjectList(msg.getWearablesList(),
    proto.proto.wearables.v1.Wearables.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.wearables.v1.GetListWearablesResponse}
 */
proto.proto.wearables.v1.GetListWearablesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.wearables.v1.GetListWearablesResponse;
  return proto.proto.wearables.v1.GetListWearablesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.wearables.v1.GetListWearablesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.wearables.v1.GetListWearablesResponse}
 */
proto.proto.wearables.v1.GetListWearablesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.wearables.v1.Wearables;
      reader.readMessage(value,proto.proto.wearables.v1.Wearables.deserializeBinaryFromReader);
      msg.addWearables(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.wearables.v1.GetListWearablesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.wearables.v1.GetListWearablesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.wearables.v1.GetListWearablesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.wearables.v1.GetListWearablesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWearablesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.wearables.v1.Wearables.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * repeated Wearables wearables = 1;
 * @return {!Array<!proto.proto.wearables.v1.Wearables>}
 */
proto.proto.wearables.v1.GetListWearablesResponse.prototype.getWearablesList = function() {
  return /** @type{!Array<!proto.proto.wearables.v1.Wearables>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.wearables.v1.Wearables, 1));
};


/**
 * @param {!Array<!proto.proto.wearables.v1.Wearables>} value
 * @return {!proto.proto.wearables.v1.GetListWearablesResponse} returns this
*/
proto.proto.wearables.v1.GetListWearablesResponse.prototype.setWearablesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.wearables.v1.Wearables=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.wearables.v1.Wearables}
 */
proto.proto.wearables.v1.GetListWearablesResponse.prototype.addWearables = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.wearables.v1.Wearables, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.wearables.v1.GetListWearablesResponse} returns this
 */
proto.proto.wearables.v1.GetListWearablesResponse.prototype.clearWearablesList = function() {
  return this.setWearablesList([]);
};


/**
 * optional uint64 count = 2;
 * @return {number}
 */
proto.proto.wearables.v1.GetListWearablesResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.wearables.v1.GetListWearablesResponse} returns this
 */
proto.proto.wearables.v1.GetListWearablesResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.proto.wearables.v1);
